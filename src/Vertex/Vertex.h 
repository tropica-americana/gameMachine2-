#ifndef _VERTEX_H_
#define _VERTEX_H_
#include <iostream>
#include <SDL2/SDL.h>
#include <glm/glm.hpp>
#include "../glmHandler/glmHandler.h"
#include <vector>
enum class Quadrant {
    positiveUpperRight , 
    positiveLowerRight , 
    positiveLowerLeft ,
    positiveUpperLeft , 
    negativeUpperRight , 
    negativeLowerRight , 
    negativeLowerLeft ,
    negativeUpperLeft 
}
enum class Axis {
    positiveX , positiveY , positiveZ , negativeX , negativeY , negativeY 
} 
class Vertex {
    private: 
    glm::mat4 varticeMatrix ; 
    public: 
    Vertex() ; 
    ~Vertex()  = default ;
    void scaleSymetrically (float length ) ;  
    void scaleAsymetrically (glm::vec3 scalingVec3 ) ; 
    void scaleSymetrically (float length , Quadrant quadrant ) ;
    void translate (glm::vec3 movementVec3 ) ;  
    void Vertex::rotateVertex (const glm::vec3 & orientationVec3) ; 
} 


#endif // !_VERTEX_H_
